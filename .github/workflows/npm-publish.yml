name: Publish packages
on:
  push:
    branches:
      - master
jobs:
  client:
    name: Publish client
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'Bump version')"
    defaults:
      run:
        working-directory: ./client
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Check package version
        id: pkgver
        run: |
          echo "::set-output name=local::$(node -p -e "require('./package.json').version")"
          echo "::set-output name=remote::$(yarn info -s $(node -p -e "require('./package.json').name") version)"
      - name: Publish package
        if: ${{ steps.pkgver.outputs.local != steps.pkgver.outputs.remote }}
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_AUTH_TOKEN }}
          package: ./client/package.json
  webview:
    name: Publish webview
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'Bump version')"
    defaults:
      run:
        working-directory: ./webview
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Check package version
        id: pkgver
        run: |
          echo "::set-output name=local::$(node -p -e "require('./package.json').version")"
          echo "::set-output name=remote::$(yarn info -s $(node -p -e "require('./package.json').name") version)"
      - name: Publish package
        if: ${{ steps.pkgver.outputs.local != steps.pkgver.outputs.remote }}
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_AUTH_TOKEN }}
          package: ./webview/package.json
  natives:
    name: Publish natives
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'Bump version')"
    defaults:
      run:
        working-directory: ./natives
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Set up .Net SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Check package version
        id: pkgver
        run: |
          echo "::set-output name=local::$(node -p -e "require('./package.json').version")"
          echo "::set-output name=remote::$(yarn info -s $(node -p -e "require('./package.json').name") version)"
      - name: Checkout generator
        if: ${{ steps.pkgver.outputs.local != steps.pkgver.outputs.remote }}
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          repository: altmp/altv-native-gen
          ref: ca946e9817f1c3b6ab96084ef9eac337f144d5f9
          path: ./gen
      - name: Checkout nativedb
        if: ${{ steps.pkgver.outputs.local != steps.pkgver.outputs.remote }}
        # uses: actions/checkout@v2
        # with:
        #   persist-credentials: false
        #   repository: altmp/natives
        #   ref: a6990af2f7a0c364b2fbeb272726875c58a14393
        #   path: ./nativedb
        run: |
          mkdir "../nativedb"
          curl "https://natives.altv.mp/natives" -A "AltPublicAgent" > "../nativedb/natives.json"
      - name: Run generator
        if: ${{ steps.pkgver.outputs.local != steps.pkgver.outputs.remote }}
        run: dotnet run -p "../gen/Durty.AltV.NativesTypingsGenerator.Console" --disableHeader --nativesPath "../nativedb/natives.json" --outPath "./index.d.ts" --outIndent "  "
      - name: Commit changes
        if: ${{ steps.pkgver.outputs.local != steps.pkgver.outputs.remote }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add "./index.d.ts"
          git commit -m "chore: Update natives/index.d.ts" -m "Co-authored-by: $(git diff-tree ${{ github.sha }} --pretty='format:%an <%ae>' -s)"
      - name: Push changes
        if: ${{ steps.pkgver.outputs.local != steps.pkgver.outputs.remote }}
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish package
        if: ${{ steps.pkgver.outputs.local != steps.pkgver.outputs.remote }}
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_AUTH_TOKEN }}
          package: ./natives/package.json
  server:
    name: Publish server
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'Bump version')"
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Check package version
        id: pkgver
        run: |
          echo "::set-output name=local::$(node -p -e "require('./package.json').version")"
          echo "::set-output name=remote::$(yarn info -s $(node -p -e "require('./package.json').name") version)"
      - name: Publish package
        if: ${{ steps.pkgver.outputs.local != steps.pkgver.outputs.remote }}
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_AUTH_TOKEN }}
          package: ./server/package.json
